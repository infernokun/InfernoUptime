# Local Development Profile
management:
  endpoints:
    web:
      cors:
        allowed-methods: GET,POST,PUT,OPTIONS,DELETE,PATCH
        allowed-origins: "*"
        allowed-headers: "*"
      exposure:
        include: "*"
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    info:
      enabled: true
    metrics:
      enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true

spring:
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java
    livereload:
      enabled: true

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 50MB

  datasource:
    url: jdbc:postgresql://${DB_IP:localhost}:5432/${DB_NAME:inferno_uptime_dev}
    username: ${DB_USER:inferno_user}
    password: ${DB_PASS:inferno_pass}
    hikari:
      maximum-pool-size: 5
      minimum-idle: 2
      connection-timeout: 20000

  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: false

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 6000ms
      database: 0
      connect-timeout: 10000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 2
          max-wait: 2000ms

  cache:
    type: redis
    redis:
      time-to-live: 600000 # 10 minutes

  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /inferno-uptime-rest
  shutdown: graceful
  tomcat:
    max-swallow-size: 50MB
    max-http-post-size: 50MB
    threads:
      max: 200
      min-spare: 10

logging:
  level:
    com.infernokun: DEBUG
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.hibernate: WARN
    org.hibernate.SQL: ${SQL_LOGGING:false}
    org.hibernate.orm.connections.pooling: ERROR
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Development-specific Inferno settings
inferno:
  uptime:
    concurrent-checks: 10
    default-check-interval: 60s
    cleanup:
      enabled: false

security:
  default-admin-password: dev-password
  encryption-key: dev-encryption-key-not-for-production
