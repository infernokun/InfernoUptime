services:
  inferno-template-web:
    image: infernokun/inferno-template-web:latest
    #build: ./inferno-template-web
    restart: always
    environment:
      - BASE_URL=http://inferno-template-web
      - REST_URL=/api
    ports:
      - "8784:80"
    volumes:
      - inferno-template-web:/var/log/nginx
    networks:
      - inferno-template-network

  inferno-template-db:
    image: postgres:17.4
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER:-inferno-template}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-inferno-template}"
      POSTGRES_DB: "${POSTGRES_DB:-inferno-template}"
    volumes:
      - inferno-template-db:/var/lib/postgresql/data
    networks:
      - inferno-template-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-inferno-template}"]
      interval: 10s
      timeout: 5s
      retries: 5

  inferno-template-rest:
    image: infernokun/inferno-template-rest:latest
    #build: ./inferno-template-rest
    restart: always
    ports:
      - "8785:8080"
    environment:
      DOCKER_COMPOSE_PATH: "${DOCKER_COMPOSE_PATH:-/var/tmp/inferno-template}"
      DB_IP: "${POSTGRES_IP:-inferno-template-db}"
      DB_NAME: "${POSTGRES_DB:-inferno-template}"
      DB_USER: "${POSTGRES_USER:-inferno-template}"
      DB_PASS: "${POSTGRES_PASSWORD:-inferno-template}"
      DB_PORT: "${DB_PORT:-5432}"
      ENCRYPTION_KEY: "${ENCRYPTION_KEY:-secret_key}"
      RSA_PRIVATE_KEY_PATH: "${RSA_PRIVATE_KEY_PATH:-/var/tmp/inferno-template/private.pem}"
      RSA_PUBLIC_KEY_PATH: "${RSA_PUBLIC_KEY_PATH:-/var/tmp/inferno-template/public.pem}"
      REDIS_HOST: "${REDIS_HOST:-inferno-template-redis}"
      REDIS_PORT: "${REDIS_PORT:-6379}"
      RECOGNITION_SERVER_HOST: "${RECOGNITION_SERVER_HOST:-inferno-template-recog}"
      RECOGNITION_SERVER_PORT: "${RECOGNITION_SERVER_PORT:-5000}"
    volumes:
      - /var/tmp/inferno-template:/var/tmp/inferno-template
    networks:
      - inferno-template-network
    depends_on:
      inferno-template-redis:
        condition: service_healthy
      inferno-template-db:
        condition: service_healthy

  inferno-template-python:
    image: infernokun/inferno-template-python:latest
    #build: ./inferno-template-python
    restart: always
    ports:
      - "8786:5000"
    environment:
      FLASK_THREADS: "${FLASK_THREADS:-4}"
      REST_API: "http://inferno-template-rest:8080/inferno-template-rest/api"
      FLASK_ENV: "production"
    volumes:
      - /var/tmp/inferno-template:/var/tmp/inferno-template
    networks:
      - inferno-template-network

  inferno-template-redis:
    image: redis:latest
    restart: unless-stopped
    volumes:
      - inferno-template-redis:/data
    networks:
      - inferno-template-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

networks:
  inferno-template-network:
    driver: bridge
    name: inferno-template-network

volumes:
  inferno-template-db:
    driver: local
  inferno-template-redis:
    driver: local
  inferno-template-web:
    driver: local