worker_processes 1;
error_log /var/log/nginx/error.log debug;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" "$http_ssl_client_s_dn_cn" ';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Global upload settings
    client_max_body_size 1G;
    client_body_timeout 300s;
    client_header_timeout 60s;
    client_body_buffer_size 16k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;

    # Compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 5;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;

        # Health Check Endpoint
        location = /health {
            default_type application/json;
            return 200 '{"success": {"status_code": 200, "status": "OK"}}';
        }

        # Serve Static Files
        location = / {
            index index.html;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }

        # CRITICAL: SSE-specific location for progress endpoints
        location ~ ^/api/(.*/progress)$ {
            proxy_pass http://inferno-uptime-rest:8080/inferno-uptime-rest/api/$1$is_args$args;
            
            # Essential headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CRITICAL SSE settings
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 600s;
            proxy_connect_timeout 10s;
            proxy_send_timeout 600s;
            
            # HTTP/1.1 for persistent connections
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable gzip for SSE
            gzip off;
            
            # SSE-specific CORS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Content-Type, Authorization, Cache-Control' always;
            add_header Cache-Control 'no-cache' always;
            
            # Handle preflight
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
                add_header Access-Control-Allow-Headers 'Content-Type, Authorization, Cache-Control' always;
                return 204;
            }
        }

        # Regular API Proxy (for non-SSE endpoints)
        location /api/ {
            proxy_pass http://inferno-uptime-rest:8080/inferno-uptime-rest/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Increased limits for file uploads
            client_max_body_size 500M;
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;
            
            # Standard timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # CORS headers
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header Access-Control-Allow-Headers 'Content-Type, Authorization' always;
            
            # Handle preflight requests
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header Access-Control-Allow-Headers 'Content-Type, Authorization' always;
                return 204;
            }
        }

        # Error Handling
        error_page 500 502 503 504 /50x.html;
        client_max_body_size 500M;  # Increased from 100M to 500M
        client_body_timeout 300s;   # Increased timeout for large uploads
        client_header_timeout 60s;
        underscores_in_headers on;
    }
}